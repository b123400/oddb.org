#!/usr/bin/env ruby
# OddbServer

$: << File.expand_path("../src", File.dirname(__FILE__))
$: << File.expand_path("..", File.dirname(__FILE__))

require 'drb/drb'
require 'rubyntlm'
require 'net/ntlm'
require 'net/ntlm/version'

require 'util/currency'
require 'util/oddbapp'
require 'etc/db_connection'

File.open("/proc/#{Process.pid}/oom_adj", 'w') do |fh|
  fh.puts "15"
end

trap("USR1") { 
	puts "caught USR1 signal, clearing Sessions\n"
	$oddb.clear 
}
trap("USR2") { 
	puts "caught USR2 signal, flushing stdout...\n"
	$stdout.flush
}

ODBA.cache.setup
ODBA.cache.clean_prefetched

case ARGV.first
when /google(-|_)crawler/i
  server_uri = ODDB::SERVER_URI_FOR_GOOGLE_CRAWLER
  process = :google_crawler
  $0 = "Oddb (OddbApp:Google-Crawler)"
when 'crawler'
  server_uri = ODDB::SERVER_URI_FOR_CRAWLER
  process = :crawler
  $0 = "Oddb (OddbApp:Crawler)"
else
  server_uri = ODDB::SERVER_URI
  process = :user
  $0 = "Oddb (OddbApp)"
end
$oddb = ODDB::App.new({ :process => process })

DRb.install_id_conv ODBA::DRbIdConv.new
DRb.start_service(server_uri, $oddb)

DRb.thread.join
